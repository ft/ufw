-------------------------------
  User-visible changes in ufw
-------------------------------

* v5.5.0 → v5.6.0 (released 2024-05-28):

** New Features

- compat: Extend errno compatibility range

** Diffstat:

    include/ufw/compat/errno.h | 24 ++++++++++++++++++++++++
    1 file changed, 24 insertions(+)


* v5.4.0 → v5.5.0 (released 2024-04-19):

** New Features

- regs: Add support for setting and clearing bits in registers.

** Diffstat:

    include/ufw/register-table.h |   4 +
    src/registers/core.c         | 159 +++++++++++++++++++++++++++++++++++
    test/t-register-table.c      | 117 +++++++++++++++++++++++++-
    3 files changed, 279 insertions(+), 1 deletion(-)


* v5.3.1 → v5.4.0 (released 2024-03-26):

** New Features

- lenp: Add support for fixed width integer prefix framing.
- bb: Add byte_buffer_reset() function.

** Bugfixes

- cmake: Fix system version inclusion. This was a regression that has been
  introduced in v5.3.0.

** Miscellaneous

- Update inttypes.h inclusion workaround with newest gcc-arm-none-eabi
  toolchain and newlib on debian sid.

** Diffstat:

    cmake/modules/GitIntegration.cmake |   5 +-
    include/ufw/byte-buffer.h          |   1 +
    include/ufw/length-prefix.h        | 103 ++++++++++--
    include/ufw/meta.h                 |   4 +-
    src/byte-buffer.c                  |   6 +
    src/length-prefix.c                | 254 +++++++++++++++++++++--------
    src/registers/utilities.c          |  28 +++-
    test/t-length-prefix.c             | 139 +++++++++++++++-
    test/t-sx-parser.c                 |  13 +-
    test/t-varint.c                    |  13 +-
    10 files changed, 467 insertions(+), 99 deletions(-)


* v5.3.0 → v5.3.1 (released 2024-03-05):

** Bugfixes

- ep: Handle EAGAIN like EINTR, namely retrying the previous action.
- cmake: Remove workarounds for recursive cmake calls.
- cmake: Fix BuildArtifacts behaviour with new toolchain files.

** Diffstat:

    cmake/modules/BuildArtifacts.cmake | 34 +++++++++++++++---------------
    cmake/modules/UFWCompiler.cmake    |  9 --------
    cmake/toolchains/ti-arm.cmake      |  4 +++-
    cmake/toolchains/ti-c2000.cmake    |  1 +
    src/endpoints/core.c               | 11 ++++++----
    5 files changed, 28 insertions(+), 31 deletions(-)


* v5.2.0 → v5.3.0 (released 2024-03-02):

** New Features

- gitint: Add support for version tag prefixes.

** Bugfixes

- gitint: Fix handling of TYPE keyword argument.

** Diffstat:

    bin/generate-version-h               | 19 ++++++++-----
    bin/print-commitdate                 | 35 +++++++++++++++++++-----
    bin/print-version                    | 35 +++++++++++++++++++-----
    cmake/modules/GitIntegration.cmake   | 40 +++++++++++++++++++---------
    vcs-integration/build-information.sh |  3 +++
    vcs-integration/git.sh               | 17 +++++++++---
    6 files changed, 111 insertions(+), 38 deletions(-)


* v5.1.0 → v5.2.0 (released 2024-02-25):

** New Features

- binary: Add support for partial word-size integer values.
- mips-linux-gnu toolchain file.
- qemu-mips test runner for big-endian tests.

** Bugfixes

- crc-16-arc: Fix _u16() behaviour on big-endian systems.
- register-table: Fix test-suite on big-endian systems.
- regp: Fix test-suite on big-endian systems.

** Diffstat:

    .gitignore                            |    1 +
    cmake/modules/SetupTargetCPU.cmake    |    6 +
    cmake/modules/UFWTest.cmake           |   14 +-
    cmake/toolchains/mips-linux-gnu.cmake |   31 +
    include/ufw/binary-format.h           | 2563 ++++++++++++++++++++-----
    src/crc-16-arc.c                      |    7 +
    target/mips/bin/run                   |    3 +
    test/t-binary-format.c                |  736 ++++++-
    test/t-register-protocol.c            |   11 +-
    test/t-register-table.c               |   35 +-
    tools/make-binary-format.scm          |  566 ++++--
    11 files changed, 3255 insertions(+), 718 deletions(-)


* v5.0.1 → v5.1.0 (released 2024-02-12):

This release mainly  reworks the way toolchain-files work.  Now toolchain files
have a unified behaviour with regards  to installation and compiler name custo-
misation. See cmake/README.toolchains for details.

** New Features

- afl++ toolchain file.
- arm-zephyr-none toolchain file.

** Miscellaneous

- Some improvements to code generation scripts

** Diffstat:

    cmake/README.toolchains                  | 30 ++++++++
    cmake/toolchains/afl++.cmake             | 55 +++++++++++++++
    cmake/toolchains/arm-zephyr-eabi.cmake   | 31 +++++++++
    cmake/toolchains/clang.cmake             | 58 +++++-----------
    cmake/toolchains/gnu-arm-none-eabi.cmake | 38 ++++++-----
    cmake/toolchains/gnu.cmake               | 20 +++++-
    cmake/toolchains/ti-arm.cmake            | 87 ++++++++++++------------
    cmake/toolchains/ti-c2000.cmake          | 87 ++++++++++++------------
    fuzz/afl++.yaml                          | 19 ++++++
    include/ufw/meta.h                       |  4 +-
    include/ufw/register-table.h             |  2 +-
    src/endpoints/instrumentable.c           |  2 +-
    tools/make-binary-format.scm             |  2 +-
    tools/make-register-macros               | 15 ----
    tools/{make-binary-format => run}        |  2 +-
    15 files changed, 280 insertions(+), 172 deletions(-)


* v5.0.0 → v5.0.1 (released 2024-01-31):

** Bugfixes

- meta: Actually update version reflection macros.

** Diffstat:

    include/ufw/meta.h | 4 ++--
    1 file changed, 2 insertions(+), 2 deletions(-)


* v4.1.0 → v5.0.0 (released 2024-01-14):

** Breaking compatibility

- RFC1055_WORST_CASE now takes two arguments. Use RFC1055_WORST_CLASSIC or
  RFC1055_WORST_WITHSOF instead for the previous behaviour, depending on the
  variant in use.
- Rename octet buffer type to byte buffer. Strictly speaking the term octet
  buffer was wrong to use here, since there are architectures on which a byte
  is not an octet. This renames the API prefix from octet_buffer_ to
  byte_buffer_, the data types from OctetBuffer and OctetChunks to ByteBuffer
  and ByteChunks, as well as the header from octet-buffer.h to byte-buffer.h.
- bb: Make paramter to _avail() and _rest() const.
- regs: Table argument to register_get_entry() is now const.

** New Features

*** Experimental

The new features marked as experimental may change their API in a minor
release, use with caution!

- regp: Add a specification for a register protocol.
- regp: Add an implementation of the proposed register protocol.
- sx: Add a small s-expression parser library (ufw-sx), that can be useful for
  system testing. It lives in its own library, because it uses malloc().

*** Stable API

- Add generic block allocator allocator data type.
- Add CRC-16-ARC implementation based on NetBSD's libkern.
- bb: Add byte_buffer_rest() function.
- bb: Add byte_buffer_consume_at_most() function.
- bb: Add ByteChunks data type.
- endpoints: Add source_empty source that always fails to produce data.
- endpoints: Add a way to make a source from a ByteChunks instance.
- endpoints: Add getbuffer extension to sinks and sources.
- endpoints: Add _atmost variants of chunk transfer functions.
- endpoints: Add source-to-sink plumbing infrastructure.
- endpoints: Add a continuable sink implementation.
- endpoints: Add optional tracing output to instrumentable buffers.
- compat,errno: Add EPROTO for platforms that do not implement it.
- lenp: Add ByteChunks support to length prefix framing.
- lenp: Add support for connecting a lenp-source to arbitrary sinks.
- regs: Add support for big-endian register tables.
- regs: Add support for double (f64) registers.
- regs: Add register_entry_size() function.
- regs: Add register_set_unsafe() function.
- regs: Add always-failing register value validator.
- Add octet-ring as a common uint8_t based ring-buffer, on platformes that
  support uint8_t.

** Bugfixes

- rfc1055: Fix RFC1055_WORST_CASE macro.
- endpoints: Fix run-out behaviour of read_from_buffer().
- meta: Update version reflection macros.

** Miscellaneous

- Add clang-tidy configuration.
- Fix some style issues found by clang-tidy.
- Add running AFL++ fuzzer on parts of the ufw library.
- ex: Add examples subdirectory with a program using regp's parse_frame().
- ex: Add an example that runs the SLIP (rfc1055) parser

** Diffstat:

    .clang-tidy                                   |  401 ++++++
    .gitignore                                    |    6 +-
    CMakeLists.txt                                |   38 +-
    LICENCE                                       |    2 +-
    cmake/modules/UFWTest.cmake                   |   95 +-
    doc/fuzzing.txt                               |   85 ++
    doc/regp.txt                                  |  365 ++++++
    examples/CMakeLists.txt                       |   16 +
    examples/ex-regp-parse-frame.c                |  137 ++
    examples/ex-rfc1055-parse-frame.c             |   78 ++
    fuzz/ex-regp-parse-frame/in/minimal.dat       |    1 +
    fuzz/ex-regp-parse-frame/in/zero-minimal.dat  |  Bin 0 -> 12 bytes
    fuzz/ex-regp-parse-frame/in/zero-toolarge.dat |  Bin 0 -> 16 bytes
    .../in/simple-slip-frame-with-sof.dat         |  Bin 0 -> 17 bytes
    .../in/simple-slip-frame.dat                  |  Bin 0 -> 16 bytes
    fuzz/run                                      |  277 ++++
    include/ufw/allocator.h                       |   60 +
    include/ufw/binary-format.h                   |    2 +-
    include/ufw/bit-operations.h                  |    2 +-
    include/ufw/byte-buffer.h                     |   67 +
    include/ufw/compat.h                          |    2 +-
    include/ufw/compat/errno.h                    |    6 +-
    include/ufw/compat/math-constants.h           |    2 +-
    include/ufw/compat/ssize-t.h                  |    6 +-
    include/ufw/compat/strings.h                  |    2 +-
    include/ufw/compiler.h                        |    2 +-
    include/ufw/convolution-low-pass.h            |    2 +-
    include/ufw/crc/crc16-arc.h                   |   21 +
    include/ufw/endpoints.h                       |   96 +-
    include/ufw/endpoints/continuable-sink.h      |   98 ++
    include/ufw/hexdump.h                         |    2 +-
    include/ufw/length-prefix.h                   |   28 +-
    include/ufw/meta.h                            |    2 +-
    include/ufw/octet-buffer.h                    |   40 -
    include/ufw/octet-ring.h                      |   18 +
    include/ufw/persistent-storage.h              |    2 +-
    include/ufw/register-protocol.h               |  262 ++++
    include/ufw/register-table.h                  |  104 +-
    include/ufw/register-utilities.h              |    2 +-
    include/ufw/rfc1055.h                         |    6 +-
    include/ufw/ring-buffer-iter.h                |    2 +-
    include/ufw/ring-buffer.h                     |    2 +-
    include/ufw/sx.h                              |  141 ++
    include/ufw/test/tap.h                        |    2 +-
    include/ufw/variable-length-integer.h         |   18 +-
    scheme/ufw/register-table.scm                 |    2 +-
    scheme/ufw/utilities.scm                      |    2 +-
    src/allocator.c                               |   42 +
    src/{octet-buffer.c => byte-buffer.c}         |   49 +-
    src/compat/strlcat.c                          |    8 +-
    src/compat/strlcpy.c                          |   14 +-
    src/compat/strnlen.c                          |    8 +-
    src/crc-16-arc.c                              |  159 +++
    src/endpoints/buffer.c                        |   44 +-
    src/endpoints/continuable-sink.c              |   96 ++
    src/endpoints/core.c                          |  234 +++-
    src/endpoints/instrumentable.c                |   53 +-
    src/endpoints/posix.c                         |    2 +-
    src/endpoints/trivial.c                       |   15 +-
    src/hexdump.c                                 |    2 +-
    src/length-prefix.c                           |  129 +-
    src/octet-ring.c                              |   12 +
    src/persistent-storage.c                      |    5 +-
    src/register-protocol.c                       | 1157 +++++++++++++++++
    src/registers/core.c                          |  423 ++++--
    src/registers/internal.h                      |   13 +-
    src/registers/utilities.c                     |   26 +-
    src/rfc1055.c                                 |    4 +-
    src/ring-buffer-iter.c                        |    2 +-
    src/sx.c                                      |  515 ++++++++
    src/test/memdiff.c                            |   35 +-
    src/test/output-utils.c                       |    3 +-
    src/test/tap.c                                |    7 +-
    src/variable-length-integer.c                 |   47 +-
    target/cortex-m3/init/startup.c               |    2 +-
    target/cortex-m3/ld/arm-cortex-qemu.ld        |    2 +-
    test/CMakeLists.txt                           |    5 +
    test/t-binary-format.c                        |    2 +-
    test/t-convolution-low-pass.c                 |    2 +-
    test/t-hexdump.c                              |    2 +-
    test/t-length-prefix.c                        |   16 +-
    test/t-persistent-storage.c                   |    2 +-
    test/t-register-protocol.c                    |  569 ++++++++
    test/t-register-table-persistent-storage.c    |    2 +-
    test/t-register-table.c                       |   46 +-
    test/t-rfc1055.c                              |   62 +-
    test/t-ring-buffer.c                          |    2 +-
    test/t-sx-parser.c                            |  471 +++++++
    test/t-varint.c                               |   52 +-
    tools/make-binary-format.scm                  |    2 +-
    tools/make-register-macros.scm                |    5 +-
    91 files changed, 6377 insertions(+), 475 deletions(-)


* v4.0.0 → v4.1.0 (released 2023-09-13):

** New Features

- cmake: Add ufw_install() function that uses the same CMake install component
  as gitint_install().
- zephyr,cmake: Support endianness in Zephyr toolchain support.

** Diffstat:

    cmake/modules/BuildArtifacts.cmake | 5 ++++-
    cmake/modules/GitIntegration.cmake | 6 ++++--
    cmake/modules/SetupTargetCPU.cmake | 5 +++++
    cmake/modules/UFWTools.cmake       | 9 +++++++++
    4 files changed, 22 insertions(+), 3 deletions(-)


* v3.5.0 → v4.0.0 (released 2023-08-24):

** Breaking compatibility

- bit-operations.h: Rename BITS_PER_* macros to UFW_BITS_PER_* to avoid symbol
  conflicts with other vendors using the same macro names.
- bit-operations.h: Remove cast from UFW_BITS_PER_BYTE macro, to allow the use
  of the macro in preprocessor conditions.
- binary-format: The ‘bf_ieee754_f32’ and ‘bf_ieee754_f64’ are gone in favour
  of ‘bf_convert32’ and ‘bf_convert64’, as well as ‘bf_convert16’.
- binary-format: All buffer pointer arguments are now ‘void*’.
- binary-format: All setter procedures ‘bf_set_*()’ now return ‘void*’; and
  instead of returning the address of their buffer argument, they now return
  the address of the piece of memory directly after the piece of memory that
  was modified by the set operation.

** New Features

- Add ufw/meta.h to expose library version information.
- Allow disabling the use of __builtin_bswapxx() even if detected, via CMake
  option ‘UFW_USE_BUILTIN_SWAP’. The default of this option is ‘ON’.

** Bugfixes

- Fix possible architecture errors, due to misaligned word accesses in
  ‘binary-format.h’.
- Fix ‘uint8_t’ detection for ‘ti-arm’ toolchain. The detection mechanism in
  CMake does not work for toolchains that are not LLVM or GCC. This by accident
  yielded the correct outcome for the ‘ti-c2000’ toolchain (which does not
  support ‘uint8_t’), but wrongly claimed the ‘ti-arm’ toolchain did not have
  this type either.

** Miscellaneous

- The ‘binary-format.h’ module is now completely generated, to avoid oversights
  due to its extremely mechanical nature of code. As a side-effect, now every
  function has API documentation attached to it.

** Diffstat:

    CMakeLists.txt                  |   17 +-
    cmake/modules/UFWCompiler.cmake |   34 +
    include/ufw/binary-format.h     | 1162 ++++++++++++++++++++++++-------
    include/ufw/bit-operations.h    |   50 +-
    include/ufw/meta.h              |   24 +
    src/test/memdiff.c              |    2 +-
    test/t-binary-format.c          |   48 +-
    tools/make-binary-format        |   15 +
    tools/make-binary-format.scm    |  509 ++++++++++++++
    9 files changed, 1558 insertions(+), 303 deletions(-)


* v3.4.0 → v3.5.0 (released 2023-05-15):

** New Features

- nanopb: Allow defining NANOPB_PROTOC independent of add_subdirectory
- bitops: Add BIT_SETo() macro to bit-operations

** Bugfixes

- rfc1055: encode: Handle -ENODATA from sources correctly
- rfc1055: Make w/SOF decoder signal ILSEQ on missing delimiters
- endpoints: Make instrumentable source/sinks send the right error codes

** Miscellaneous

- test,rfc1055: Fix buffer overflow in test suite

** Diffstat:

    cmake/modules/AddNanoPB.cmake  |   6 +-
    include/ufw/bit-operations.h   |  14 +++
    src/endpoints/instrumentable.c |   4 +-
    src/rfc1055.c                  |   9 +-
    test/t-rfc1055.c               | 151 ++++++++++++++++++++++++++++++++-
    5 files changed, 175 insertions(+), 9 deletions(-)


* v3.3.0 → v3.4.0 (released 2023-02-26):

** New Features

- hexdump: Add Generic, portable hexdump(1) like utility.
- rfc1055: Signal successful end-of-frame to caller.
- bitops: Extend zephyr compatibility to cover BITS_PER_LONG_LONG.
- toolchain.h: Add detection for ctype.h and isprint().

** Bugfixes

- rfc1055: Fix frame delimiter octet.
- rfc1055: Forward Source/Sink error codes more consistently.

** Miscellaneous

- Small doxygen improvements.
- Improve internal code documentation.

** Diffstat:

    CMakeLists.txt                     |   6 ++
    include/ufw/bit-operations.h       |  15 ++-
    include/ufw/convolution-low-pass.h |   2 +-
    include/ufw/hexdump.h              |  31 ++++++
    include/ufw/toolchain.h.in         |   6 ++
    src/hexdump.c                      | 159 +++++++++++++++++++++++++++
    src/rfc1055.c                      |  10 +-
    test/CMakeLists.txt                |   4 +
    test/t-hexdump.c                   | 165 +++++++++++++++++++++++++++++
    test/t-rfc1055.c                   |  13 +--
    10 files changed, 397 insertions(+), 14 deletions(-)


* v3.2.0 → v3.3.0 (released 2023-02-16):

** New Features

- Add support for nanopb.

** Diffstat:

    cmake/modules/AddNanoPB.cmake | 18 ++++++++++++++++++
    module.yaml                   |  3 +++
    2 files changed, 21 insertions(+)


* v3.1.0 → v3.2.0 (released 2023-02-10):

** New Features

- test/tap: Add okx() variant of ok().
- Improve zephyr toolchain compatibility for zephyr 3.3.

** Diffstat:

    cmake/modules/SetupTargetCPU.cmake |  6 +++++-
    include/ufw/test/tap.h             |  2 ++
    src/test/tap.c                     | 15 +++++++++++----
    3 files changed, 18 insertions(+), 5 deletions(-)


* v3.0.0 → v3.1.0 (released 2023-01-12):

** New Features

- Add an errno compatibility layer. Instead of including ‘errno.h’, portable
  code should include ‘ufw/compat/errno.h’.
- Add octet-buffer data type.
- Add generic source and sink data types (collectively called endpoints).
- Add RFC1055 compliant SLIP codec, with optional start-of-frame delimiter
  support.
- Add variable-length integer encoding. This follows the specification for
  Google's protobuf; it implements 32/64 bit unsigned/signed integers.
- Add length-prefix framing, using 64 bit unsigned variable-length integer
  length specifiers.
- cmake, GitIntegration: Install via ‘ufw-git-install’ CMake component. This
  allows user to only install these artefacts if they so choose.

** Bugfixes

- Fix memdiff issue when there are differences in the last line of hexadecimal
  data.
- Implement ssize_t limit macros for toolchains (Texas Instruments), that do
  not implement this data type. This is an oversight at the time the typedef
  and the basic compatibility layer for the data type was introduced.

** Miscellaneous

- Documentation improvements.
- Slight restructuring of ‘src/’ directory without impact onto users.

** Diffstat:

    .dir-locals.el                                |   6 +
    .gitignore                                    |   6 +-
    CMakeLists.txt                                |  30 +-
    cmake/modules/GitIntegration.cmake            |   6 +-
    include/ufw/compat.h                          |   7 +
    include/ufw/compat/errno.h                    |  53 +++
    include/ufw/compat/math-constants.h           |   6 +
    include/ufw/compat/ssize-t.h                  |  26 +-
    include/ufw/compat/strings.h                  |   6 +
    include/ufw/endpoints.h                       | 149 +++++++
    include/ufw/length-prefix.h                   |  38 ++
    include/ufw/octet-buffer.h                    |  40 ++
    include/ufw/register-utilities.h              |   6 +
    include/ufw/rfc1055.h                         |  42 ++
    include/ufw/toolchain.h.in                    |  28 ++
    include/ufw/variable-length-integer.h         |  40 ++
    src/endpoints/buffer.c                        |  57 +++
    src/endpoints/core.c                          | 179 ++++++++
    src/endpoints/instrumentable.c                |  95 +++++
    src/endpoints/posix.c                         |  54 +++
    src/endpoints/trivial.c                       |  33 ++
    src/length-prefix.c                           | 173 ++++++++
    src/octet-buffer.c                            | 111 +++++
    src/persistent-storage.c                      | 136 ++++++
    src/{register-table.c => registers/core.c}    |   2 +-
    .../internal.h}                               |   0
    .../utilities.c}                              |   2 +-
    src/rfc1055.c                                 | 241 +++++++++++
    src/test/memdiff.c                            |  60 +--
    src/test/output-utils.c                       |   6 +
    src/variable-length-integer.c                 | 283 +++++++++++++
    test/CMakeLists.txt                           |   5 +-
    test/t-binary-format.c                        |   6 +
    test/t-length-prefix.c                        |  89 ++++
    test/t-persistent-storage.c                   |   6 +
    test/t-register-table-persistent-storage.c    |   8 +-
    test/t-register-table.c                       |   6 +
    test/t-rfc1055.c                              | 254 ++++++++++++
    test/t-varint.c                               | 386 ++++++++++++++++++
    39 files changed, 2639 insertions(+), 42 deletions(-)


* v2.1.0 → v3.0.0 (released 2022-09-21):

** Breaking compatibility

- Reorganise code-base:
  - cmake: ufw++ target removed.
  - cmake: ufw-common target removed.
  - code: Separation of c and c/c++ code removed.
  - code: All header files now have a consistent ‘ufw’ prefix.
    Examples:

    |--------------------+----------------------|
    | Old (pre-3.0)      | New (3.0 and newer)  |
    |--------------------+----------------------|
    | common/compiler.h  | ufw/compiler.h       |
    | c/compat/strings.h | ufw/compat/strings.h |
    | test/tap.h         | ufw/test/tap.h       |
    |--------------------+----------------------|

- The logger API was removed.


** New Features

- cmake: ufw-tap-nosan target added.
- register-table: Allow adding per-register user-specified data.
- register-table: Add user-specified initialisation API.


** Bugfixes

- Fix TI toolchain feature detection.
- Remove internal register API from public header path.
- register-table: Fix return code of functions encountering uninitialised
  register tables.


** Miscellaneous

- CMake minimum version increased to ‘3.13.4’.
- register-table: REG_* and REGx_* macros can now be generated.
- Some code was re-indented for consistency.


** Diffstat:

    CMakeLists.txt                             |  90 +++--
    LICENCE                                    |   2 +-
    cmake/modules/GNUBuiltins.cmake            |  23 +-
    doc/CMakeLists.txt                         |   2 +
    include/c/logger.h                         |  87 -----
    include/{c => ufw}/binary-format.h         |  10 +-
    include/{common => ufw}/bit-operations.h   |   8 +-
    include/{c => ufw}/compat.h                |  14 +-
    include/{c => ufw}/compat/math-constants.h |   8 +-
    include/{c => ufw}/compat/ssize-t.h        |   8 +-
    include/{c => ufw}/compat/strings.h        |   8 +-
    include/{common => ufw}/compiler.h         |  10 +-
    include/{c => ufw}/convolution-low-pass.h  |   8 +-
    include/{c => ufw}/persistent-storage.h    |   8 +-
    include/{c => ufw}/register-table.h        | 215 +++++++----
    include/{c => ufw}/register-utilities.h    |   8 +-
    include/{c => ufw}/ring-buffer-iter.h      |  10 +-
    include/{c => ufw}/ring-buffer.h           |   8 +-
    include/{ => ufw}/test/tap.h               |   9 +-
    include/{common => ufw}/toolchain.h.in     |   0
    scheme/ufw/register-table.scm              |  91 +++++
    scheme/ufw/utilities.scm                   |  23 ++
    src/c/logger.c                             | 175 ---------
    src/{c => compat}/strlcat.c                |   4 +-
    src/{c => compat}/strlcpy.c                |   4 +-
    src/{c => compat}/strnlen.c                |   5 +-
    src/{c => }/persistent-storage.c           |  23 +-
    {include/c => src}/register-internal.h     |  10 +-
    src/{c => }/register-table.c               |  69 +++-
    src/{c => }/register-utilities.c           |  19 +-
    src/{c => }/ring-buffer-iter.c             |   4 +-
    src/test/memdiff.c                         |  10 +-
    src/test/output-utils.c                    |   6 +-
    src/test/tap.c                             |   8 +-
    target/cortex-m3/init/startup.c            |   4 +-
    target/cortex-m3/ld/arm-cortex-qemu.ld     |   2 +-
    test/CMakeLists.txt                        |   2 +-
    test/t-binary-format.c                     |   6 +-
    test/t-convolution-low-pass.c              |   8 +-
    test/t-persistent-storage.c                |   6 +-
    test/t-register-table-persistent-storage.c | 423 +++++++++++----------
    test/t-register-table.c                    |  41 +-
    test/t-ring-buffer.c                       |  10 +-
    tools/make-register-macros                 |  15 +
    tools/make-register-macros.scm             |  72 ++++
    45 files changed, 853 insertions(+), 723 deletions(-)


* v2.0.1 → v2.1.0 (released 2022-06-25):

** New Features

- Add support for draw.io graphics in GenerateGraphics.cmake.

** Diffstat:

    cmake/modules/GenerateGraphics.cmake | 18 +++++++++++++++++-
    1 file changed, 17 insertions(+), 1 deletion(-)


* v2.0.0 → v2.0.1 (released 2022-06-24):

** Bugfixes

- Handle ufwz inclusion like any other zephyr module.
- Parenthesise macro arguments more pedantically in BIT*_GET().

** Diffstat:

    include/common/bit-operations.h | 6 +++---
    module.yaml                     | 2 ++
    2 files changed, 5 insertions(+), 3 deletions(-)


* v1.0.0 → v2.0.0 (released 2022-06-03):

** Breaking compatibility

- Remove support for recursive cmake building schemes. This is the big one. See
  the commit message for 8796e9a9d for a rationale. Similar build schemes can
  be achieved using mmh v0.11 and newer.
- artefacts: Do not include DetachedHead in versioned file names.
- artefacts: Drop _vNoVersion if no version tag was found.

** New Features

- Experimental support for selecting from multiple clang toolchain versions.
- register-table: Add ‘register_address()’ API.
- register-table: Add ‘register_get_entry()’ API.
- register-table: Allow swapping out printing routines.
- register-table: Add support for printing register values and validators.
- modules: Add inclusion rule for lwgps module.

** Bugfixes

- xilinx-ise: Disable async_to_sync. This was set by mistake.
- Fix compilation with newer newlib versions (3.3.0 in particular).

** Miscellaneous

- Added integration tests for register-table and persistent-storage.
- Improve register-table initialisation error detection capabilities.

** Diffstat:

    .gitignore                                    |   1 +
    AUTHORS                                       |   1 +
    CMakeLists.txt                                |   9 +-
    bin/generate-artifacts                        |  11 +-
    cmake/modules/BuildInTargetDir.cmake          |  33 --
    cmake/modules/BuildInZephyrDir.cmake          | 289 -----------------
    cmake/modules/SetupUFW.cmake                  | 178 +----------
    cmake/toolchains/clang.cmake                  |  45 ++-
    .../xilinx-ise/xst/synthesis_script.xst.in    |   2 +-
    include/c/register-table.h                    |  12 +-
    include/c/register-utilities.h                |  14 +-
    module.yaml                                   |   2 +
    src/c/register-table.c                        |  10 +
    src/c/register-utilities.c                    | 227 +++++++++----
    test/CMakeLists.txt                           |   3 +-
    test/t-register-table-persistent-storage.c    | 297 ++++++++++++++++++
    test/t-register-table.c                       |  23 +-
    17 files changed, 584 insertions(+), 573 deletions(-)


* scratch → v1.0.0 (released 2021-08-14):

** Miscellaneous

- First system release from scratch.

** Diffstat:

    .clang-format                                 |   89 +
    .gitignore                                    |   29 +
    AUTHORS                                       |    9 +
    CMakeLists.txt                                |  120 +
    HACKING                                       |   94 +
    LICENCE                                       |   25 +
    README                                        |   42 +
    bin/generate-artifacts                        |   98 +
    bin/generate-version-h                        |  198 ++
    bin/print-commitdate                          |   16 +
    bin/print-version                             |   16 +
    cmake/kconfig/README                          |   16 +
    cmake/kconfig/debug.conf                      |    4 +
    cmake/kconfig/minsizerel.conf                 |    4 +
    cmake/kconfig/release.conf                    |    4 +
    cmake/kconfig/relwithdebinfo.conf             |    4 +
    cmake/modules/ArmCmsis.cmake                  |   10 +
    cmake/modules/BuildArtifacts.cmake            |  166 ++
    cmake/modules/BuildInTargetDir.cmake          |   33 +
    cmake/modules/BuildInZephyrDir.cmake          |  289 ++
    cmake/modules/FakeTimeSupport.cmake           |   18 +
    cmake/modules/FreeRTOS.cmake                  |  101 +
    cmake/modules/GNUAttributes.cmake             |  183 ++
    cmake/modules/GNUBuiltins.cmake               |   59 +
    cmake/modules/GNUCompilerWarnings.cmake       |  171 ++
    cmake/modules/GenerateGraphics.cmake          |  161 ++
    cmake/modules/GitIntegration.cmake            |  210 ++
    cmake/modules/HardwareAbstraction.cmake       |   81 +
    cmake/modules/InitialiseToolchain.cmake       |  222 ++
    cmake/modules/Libtap.cmake                    |   25 +
    cmake/modules/Newlib.cmake                    |   16 +
    cmake/modules/STCmsis.cmake                   |   14 +
    cmake/modules/STM32HAL.cmake                  |   59 +
    cmake/modules/STM32HAL_f0.cmake               |   69 +
    cmake/modules/STM32HAL_f1.cmake               |   68 +
    cmake/modules/STM32HAL_f2.cmake               |   74 +
    cmake/modules/STM32HAL_f3.cmake               |   80 +
    cmake/modules/STM32HAL_f4.cmake               |   97 +
    cmake/modules/STM32HAL_f7.cmake               |   97 +
    cmake/modules/STM32HAL_g0.cmake               |   70 +
    cmake/modules/STM32HAL_g4.cmake               |   91 +
    cmake/modules/STM32HAL_h7.cmake               |  123 +
    cmake/modules/STM32HAL_l0.cmake               |   73 +
    cmake/modules/STM32HAL_l1.cmake               |   67 +
    cmake/modules/STM32HAL_l4.cmake               |  112 +
    cmake/modules/STM32HAL_l5.cmake               |  100 +
    cmake/modules/STM32HAL_wb.cmake               |   77 +
    cmake/modules/SetupTargetCPU.cmake            |  131 +
    cmake/modules/SetupUFW.cmake                  |  221 ++
    cmake/modules/TICompilerWarnings.cmake        |   69 +
    cmake/modules/ToolchainFeatures.cmake         |  114 +
    cmake/modules/UFWTest.cmake                   |  111 +
    cmake/modules/UFWTools.cmake                  |   96 +
    cmake/modules/XilinxISEToolchain.cmake        |  405 +++
    cmake/modules/pandocology.cmake               |  431 +++
    cmake/toolchains/clang-arm-none-eabi.cmake    |   21 +
    cmake/toolchains/clang.cmake                  |   42 +
    cmake/toolchains/gnu-arm-none-eabi.cmake      |   25 +
    cmake/toolchains/gnu.cmake                    |   27 +
    cmake/toolchains/ti-arm.cmake                 |   59 +
    cmake/toolchains/ti-c2000.cmake               |   65 +
    cmake/toolchains/xilinx-ise.cmake             |   31 +
    doc/CMakeLists.txt                            |   20 +
    doc/Doxyfile.in                               | 2484 +++++++++++++++++
    .../xilinx-ise/cmd/bitgen_command_file.cmd    |   29 +
    .../xilinx-ise/cmd/impact_program_jtag.cmd.in |    6 +
    .../xilinx-ise/cmd/map_command_file.cmd       |   15 +
    .../xilinx-ise/cmd/ngd_command_file.cmd       |    3 +
    .../xilinx-ise/cmd/par_command_file.cmd       |    3 +
    .../xilinx-ise/cmd/twr_command_file.cmd       |    4 +
    doc/examples/xilinx-ise/target.cmake          |   19 +
    .../xilinx-ise/tcl/process_properties.tcl     |  328 +++
    .../xilinx-ise/tcl/project_properties.tcl     |    9 +
    .../xilinx-ise/xst/synthesis_script.xst.in    |   55 +
    include/c/binary-format.h                     |  533 ++++
    include/c/compat.h                            |   18 +
    include/c/compat/math-constants.h             |   85 +
    include/c/compat/ssize-t.h                    |   52 +
    include/c/compat/strings.h                    |   31 +
    include/c/convolution-low-pass.h              |  139 +
    include/c/logger.h                            |   87 +
    include/c/persistent-storage.h                |  169 ++
    include/c/register-internal.h                 |   46 +
    include/c/register-table.h                    |  412 +++
    include/c/register-utilities.h                |   25 +
    include/c/ring-buffer-iter.h                  |   99 +
    include/c/ring-buffer.h                       |  192 ++
    include/common/bit-operations.h               |  354 +++
    include/common/compiler.h                     |  252 ++
    include/common/toolchain.h.in                 |  337 +++
    include/test/tap.h                            |   90 +
    module.yaml                                   |   33 +
    src/c/logger.c                                |  175 ++
    src/c/persistent-storage.c                    |  475 ++++
    src/c/register-table.c                        | 1469 ++++++++++
    src/c/register-utilities.c                    |  213 ++
    src/c/ring-buffer-iter.c                      |   48 +
    src/c/strlcat.c                               |   56 +
    src/c/strlcpy.c                               |   50 +
    src/c/strnlen.c                               |   31 +
    src/test/memdiff.c                            |  401 +++
    src/test/output-utils.c                       |   67 +
    src/test/tap.c                                |   99 +
    target/cortex-m3/bin/run                      |   25 +
    target/cortex-m3/init/startup.c               |  158 ++
    target/cortex-m3/ld/arm-cortex-qemu.ld        |  137 +
    test/.gitignore                               |   12 +
    test/CMakeLists.txt                           |   33 +
    test/t-binary-format.c                        |  676 +++++
    test/t-convolution-low-pass.c                 |  106 +
    test/t-persistent-storage.c                   |  122 +
    test/t-register-table.c                       |  988 +++++++
    test/t-ring-buffer.c                          |   61 +
    vcs-integration/build-information.sh          |   35 +
    vcs-integration/definitions.sh.example        |   12 +
    vcs-integration/git.sh                        |  250 ++
    vcs-integration/system-version.h.in           |  126 +
    vcs-integration/version.h.in                  |  170 ++
    118 files changed, 17556 insertions(+)

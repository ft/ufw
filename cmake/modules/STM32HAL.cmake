if(__UFW_STM32HAL)
  return()
endif()
set(__UFW_STM32HAL 1)

include(UFWTools)

function(add_stm32_hal_high kind root)
  set(library "stm32${kind}-hal")
  ufw_prefix(src ${root}/Src/ ${__UFW_STM32HAL_${kind}_HIGH_SOURCES})
  ufw_add_library(${library} ${root}/Inc ${src})
  target_link_libraries(${library} board-interface st-cmsis-${kind})
endfunction()

function(add_stm32_hal_low kind root)
  set(library "stm32${kind}-hal-lowlevel")
  ufw_prefix(src ${root}/Src/ ${__UFW_STM32HAL_${kind}_LOW_SOURCES})
  ufw_add_library(${library} ${root}/Inc ${src})
  target_link_libraries(${library} board-interface st-cmsis-${kind})
endfunction()

function(add_stm32_hal_legacy kind root)
  set(library "stm32${kind}-hal-legacy")
  ufw_prefix(src ${root}/Src/ ${__UFW_STM32HAL_${kind}_LEGACY_SOURCES})
  ufw_add_library(${library} ${root}/Inc ${src})
  target_link_libraries(${library} board-interface st-cmsis-${kind})
endfunction()

function(add_stm32_hal root)
  cmake_parse_arguments(
    PA "" "USE_HIGHLEVEL;USE_LOWLEVEL;USE_LEGACY" "" ${ARGN})
  if (NOT PA_USE_HIGHLEVEL)
    set(PA_USE_HIGHLEVEL 1)
  endif()
  if (NOT PA_USE_LOWLEVEL)
    set(PA_USE_LOWLEVEL 1)
  endif()
  if (NOT PA_USE_LEGACY)
    set(PA_USE_LEGACY 0)
  endif()

  ufw_get_property(board-objects BOARD_CPU_FAMILY cpu)
  set(library "st-cmsis-${cpu}")

  include(STM32HAL_${cpu})
  if (PA_USE_HIGHLEVEL)
    add_stm32_hal_high(${cpu} ${root})
  endif()
  if (PA_USE_LOWLEVEL)
    add_stm32_hal_low(${cpu} ${root})
  endif()
  if (PA_USE_LEGACYLEVEL)
    add_stm32_hal_legacy(${cpu} ${root})
  endif()
endfunction()
